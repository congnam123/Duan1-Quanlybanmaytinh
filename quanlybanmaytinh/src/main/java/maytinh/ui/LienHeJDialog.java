/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package maytinh.ui;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import maytinh.controller.LienHeController;
import maytinh.entity.LienHe;
import maytinh.util.XAuth;



/**
 *
 * @author Cong Nam
 */
public class LienHeJDialog extends javax.swing.JDialog {
     private final LienHeController controller = new LienHeController();

    public LienHeJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setTitle("Liên Hệ Với Quản Trị Viên");
        customizeComponents();
    }

    private void customizeComponents() {
        // Kiểm tra đăng nhập
        if (XAuth.user == null) {
            JOptionPane.showMessageDialog(this, "Bạn cần đăng nhập để sử dụng tính năng này!", "Thông báo", JOptionPane.WARNING_MESSAGE);
            this.dispose();
            return;
        }

        // Tự động điền username và disable field
        txtUsername.setText(XAuth.user.getUsername());
        txtUsername.setEditable(false);
        txtUsername.setBackground(new java.awt.Color(240, 240, 240));
        txtUsername.setToolTipText("Tên người dùng hiện tại: " + XAuth.user.getFullname());

        // Thiết lập tooltip cho nội dung
        txtNoiDung.setToolTipText("Nhập nội dung liên hệ (tối thiểu 10 ký tự)");

        // Thiết lập focus vào nội dung
        txtNoiDung.requestFocus();

        // Cải thiện giao diện bảng
        tblLienHe.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tblLienHe.setShowGrid(true);
        tblLienHe.setGridColor(new java.awt.Color(230, 230, 230));
        tblLienHe.getTableHeader().setReorderingAllowed(false);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtNoiDung = new javax.swing.JTextArea();
        btnGui = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLienHe = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 204));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("LIÊN HỆ VớI QUẢN TRỊ VIÊN");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Gửi Liên Hệ", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI", 1, 14), new java.awt.Color(0, 102, 204))); // NOI18N

        jLabel2.setText("Tên người dùng hiện tại:");

        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });

        jLabel3.setText("Nội dung liên hệ:");

        txtNoiDung.setColumns(20);
        txtNoiDung.setRows(5);
        txtNoiDung.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jScrollPane3.setViewportView(txtNoiDung);

        btnGui.setBackground(new java.awt.Color(0, 153, 51));
        btnGui.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnGui.setForeground(new java.awt.Color(255, 255, 255));
        btnGui.setText("Gửi Liên Hệ");
        btnGui.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGui.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuiActionPerformed(evt);
            }
        });

        btnLamMoi.setBackground(new java.awt.Color(255, 153, 0));
        btnLamMoi.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnLamMoi.setForeground(new java.awt.Color(255, 255, 255));
        btnLamMoi.setText("Làm Mới");
        btnLamMoi.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnGui, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGui, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lịch Sử Liên Hệ", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI", 1, 14), new java.awt.Color(0, 102, 204))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText("Lịch sử liên hệ của bạn:");

        tblLienHe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tên Người Dùng", "Nội Dung", "Thời Gian"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblLienHe.setRowHeight(25);
        tblLienHe.setSelectionBackground(new java.awt.Color(230, 240, 255));
        tblLienHe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLienHeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblLienHe);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuiActionPerformed
        // Kiểm tra đăng nhập
        if (XAuth.user == null) {
            JOptionPane.showMessageDialog(this, "Bạn cần đăng nhập để sử dụng tính năng này!", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Kiểm tra dữ liệu đầu vào
        String noiDung = txtNoiDung.getText().trim();

        if (noiDung.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập nội dung liên hệ!", "Thông báo", JOptionPane.WARNING_MESSAGE);
            txtNoiDung.requestFocus();
            return;
        }

        if (noiDung.length() < 10) {
            JOptionPane.showMessageDialog(this, "Nội dung liên hệ phải có ít nhất 10 ký tự!", "Thông báo", JOptionPane.WARNING_MESSAGE);
            txtNoiDung.requestFocus();
            return;
        }

        try {
            // Tạo đối tượng liên hệ mới với username từ session
            LienHe lh = new LienHe();
            lh.setUsername(XAuth.user.getUsername());
            lh.setNoidung(noiDung);
            lh.setThoigian(new Date());

            // Gửi liên hệ
            controller.guiLienHe(lh);
            JOptionPane.showMessageDialog(this,
                "Gửi liên hệ thành công!\nCảm ơn " + XAuth.user.getFullname() + " đã liên hệ với chúng tôi.",
                "Thành công", JOptionPane.INFORMATION_MESSAGE);

            // Xóa nội dung sau khi gửi thành công
            txtNoiDung.setText("");
            txtNoiDung.requestFocus();

            // Cập nhật bảng
            fillTable();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Có lỗi xảy ra khi gửi liên hệ!\nVui lòng thử lại.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnGuiActionPerformed

    private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsernameActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtUsernameActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        // Chỉ xóa nội dung liên hệ, giữ nguyên username
        txtNoiDung.setText("");
        txtNoiDung.requestFocus();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // Khởi tạo bảng khi mở form
        fillTable();

        // Hiển thị thông tin chào mừng
        if (XAuth.user != null) {
            setTitle("Liên Hệ Với Quản Trị Viên - " + XAuth.user.getFullname());
        }
    }//GEN-LAST:event_formWindowOpened

    private void tblLienHeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLienHeMouseClicked
        int selectedRow = tblLienHe.getSelectedRow();
        if (selectedRow >= 0) {
            int id = (Integer) tblLienHe.getValueAt(selectedRow, 0);
            LienHe selectedContact = controller.getLienHeById(id);

            if (selectedContact != null) {
                showContactDetail(selectedContact);
            }
        }
    }//GEN-LAST:event_tblLienHeMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LienHeJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LienHeJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LienHeJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LienHeJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                LienHeJDialog dialog = new LienHeJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGui;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblLienHe;
    private javax.swing.JTextArea txtNoiDung;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables



    private void fillTable() {
        try {
            // Kiểm tra đăng nhập
            if (XAuth.user == null) {
                return;
            }

            // Chỉ hiển thị liên hệ của người dùng hiện tại
            List<LienHe> list = controller.getLienHeTheoUsername(XAuth.user.getUsername());
            DefaultTableModel model = (DefaultTableModel) tblLienHe.getModel();
            model.setRowCount(0);

            // Format thời gian
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");

            for (LienHe lh : list) {
                String formattedTime = lh.getThoigian() != null ? sdf.format(lh.getThoigian()) : "";
                String shortContent = lh.getNoidung().length() > 50 ?
                    lh.getNoidung().substring(0, 50) + "..." : lh.getNoidung();

                // Thêm thông tin trả lời nếu có
                if (lh.getAdminReply() != null && !lh.getAdminReply().trim().isEmpty()) {
                    shortContent += "\n[Admin đã trả lời]";
                }

                model.addRow(new Object[]{
                    lh.getId(),
                    lh.getUsername(),
                    shortContent,
                    formattedTime
                });
            }

            // Cải thiện giao diện bảng
            if (tblLienHe.getColumnModel().getColumnCount() > 0) {
                tblLienHe.getColumnModel().getColumn(0).setPreferredWidth(50);  // ID
                tblLienHe.getColumnModel().getColumn(1).setPreferredWidth(120); // Username
                tblLienHe.getColumnModel().getColumn(2).setPreferredWidth(250); // Nội dung
                tblLienHe.getColumnModel().getColumn(3).setPreferredWidth(130); // Thời gian
            }

            // Hiển thị thông tin tổng quan
            int totalContacts = list.size();
            jLabel4.setText("Lịch sử liên hệ của bạn (" + totalContacts + " liên hệ):");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Có lỗi khi tải dữ liệu!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }

    private void showContactDetail(LienHe contact) {
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        StringBuilder detail = new StringBuilder();

        detail.append("Chi tiết liên hệ #").append(contact.getId()).append("\n");
        detail.append("=====================================\n\n");
        detail.append("Thời gian gửi: ").append(sdf.format(contact.getThoigian())).append("\n\n");
        detail.append("Nội dung của bạn:\n").append(contact.getNoidung()).append("\n\n");

        if (contact.getAdminReply() != null && !contact.getAdminReply().trim().isEmpty()) {
            detail.append("=====================================\n");
            detail.append("PHẢN HỒI TỪ ADMIN\n");
            detail.append("=====================================\n");
            detail.append("Thời gian phản hồi: ").append(sdf.format(contact.getAdminReplyTime())).append("\n\n");
            detail.append("Nội dung phản hồi:\n").append(contact.getAdminReply()).append("\n\n");
        } else {
            detail.append("=====================================\n");
            detail.append("Trạng thái: Chưa có phản hồi từ Admin\n");
            detail.append("Vui lòng chờ Admin xử lý yêu cầu của bạn.\n");
        }

        JOptionPane.showMessageDialog(this, detail.toString(), "Chi Tiết Liên Hệ", JOptionPane.INFORMATION_MESSAGE);
    }
}
